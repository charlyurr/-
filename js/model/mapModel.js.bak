import { Map, View } from "ol";
import TileLayer from "ol/layer/Tile";
import OSM from "ol/source/OSM";
import GeoJSON from "ol/format/GeoJSON";
import VectorLayer from "ol/layer/Vector";
import VectorSource from "ol/source/Vector";
import Modify from "ol/interaction/Modify";

console.log("in");
export class MapModel {
  constructor() {
    this.map = new Map({
      layers: [
        new TileLayer({
          source: new OSM(),
        }),
      ],
      // view: new View({
      //   center: [18.511463450922804, -33.94418730405998],
      //   zoom: 12,
      //   projection: "EPSG:4326",
      //   extent: [-2000, -2000, 2000, 2000],
      //   // rotation: 0,
      // }),
      view: new View({
        // center: [18.511463450922804, -33.94418730405998],
        center: [0, 0],
        center: [18.511463450922804, -33.94418730405998],
        zoom: 12,
        projection: "EPSG:4326",
        extent: [-2000, -2000, 2000, 2000],
        rotation: 0,
      }),
    });
  }
  renderGeoJSONFeatures(geojsonData) {
    console.log("renderGeoJSONFeatures");
    const vectorSource = new VectorSource({
      target: "map", // map-container
      format: new GeoJSON(),
      url: "../../assets/Parks.geojson",
    });

    console.log("vectorLayer");

    const vectorLayer = new VectorLayer({
      source: vectorSource,
    });

    console.log(vectorLayer);

    this.map.addLayer(vectorLayer);

    const modify = new Modify({
      source: vectorSource,
    });

    this.map.addInteraction(modify);
  }
}

// export class MapModel {
//   constructor() {
//     // Initialize geojsonData property
//     this.geojsonData = null;
//   }

//   // Method to fetch GeoJSON data from a file or an API
//   async fetchGeoJSONData(url) {
//     console.log(`fetchGeoJSONData(url): ${url}`);
//     try {
//       // Fetch GeoJSON data from the provided URL
//       // const response = await fetch(url);
//       const response = await fetch("../../assets/Parks.geojson");
//       // .then(
//       //   (response) => {
//       //     // console.log(response.body.text());
//       //     const jsonData = response.json();
//       //     console.log(`jsonData: ${jsonData}`);
//       //   }
//       // );
//       console.log(`response(url): ${response.body}`);
//       console.log(`response(url): ${response.headers}`);
//       // console.log(`response(features): ${response.features[0]}`);

//       // Check if the response is OK
//       if (!response.ok) {
//         throw new Error(`Failed to fetch GeoJSON data: ${response.statusText}`);
//       }

//       // Parse the response as JSON
//       const jsonData = await response.json();
//       // const jsonData = response;

//       // Check if the response is valid GeoJSON
//       if (
//         !jsonData ||
//         !jsonData.features ||
//         !Array.isArray(jsonData.features)
//       ) {
//         throw new Error("Invalid GeoJSON format");
//       }

//       // Store the GeoJSON data in the model
//       this.geojsonData = jsonData;

//       // Return the GeoJSON data
//       return jsonData;
//     } catch (error) {
//       //   console.error("Error fetching GeoJSON data:", error); // MapModel.js:43 Error fetching GeoJSON data: SyntaxError: Unexpected token '<', "<!DOCTYPE "... is not valid JSON
//       throw error;
//     }
//   }

//   // Method to get GeoJSON data
//   getGeoJSONData() {
//     return this.geojsonData;
//   }
// }

// export class MapModel {
//   // Method to fetch GeoJSON data from a file or an API
//   async fetchGeoJSONData(url) {
//     // const response = url;
//     const response = "../../assets/Parks.geojson";
//     console.log(response);
//     this.geojsonData = response;
//     return response;
//   }

//   // Method to get GeoJSON data
//   getGeoJSONData() {
//     return this.geojsonData;
//   }
// }
